<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Brian Osborne</title><link>http://bkosborne.com/</link><description>Recent content on Brian Osborne</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://bkosborne.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Additional Special Characters to Drupal's CKEditor 5 Module</title><link>http://bkosborne.com/blog/adding-additional-special-characters-to-drupals-ckeditor-5-module/</link><pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/adding-additional-special-characters-to-drupals-ckeditor-5-module/</guid><description>CKEditor 5 has a plugin called Special Characters that Drupal&amp;rsquo;s CKEditor 5 module makes available to use. The plugin provides a toolbar button that can be used to insert characters that may not be easy to type manually using a keyboard, especially for people who are not used to using them frequently.
It comes with a list of default special characters, organized by category. One such category is for Latin characters and includes characters such as Ā, Ć, and Ē.</description></item><item><title>Introducing the Editoria11y Drupal module</title><link>http://bkosborne.com/blog/introducing-the-editoria11y-drupal-module/</link><pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/introducing-the-editoria11y-drupal-module/</guid><description>John Jameson, a digital accessibility developer and colleague of mine, has been working hard for months on a new accessibility module for Drupal module Editoria11y.
Editoria11y (editorial accessibility) is a user-friendly accessibility checker that addresses three critical needs for content authors:
It runs automatically. Modern spellcheck works so well because it is always running; put spellcheck behind a button and few users remember to run it! It runs in context. Views, Layout Builder, Media and all the other modules Drupal uses to assemble a complex page means checkers that run on individual fields cannot &amp;ldquo;see&amp;rdquo; errors that appear on render.</description></item><item><title>Introducing the Decorative Image Widget Drupal module</title><link>http://bkosborne.com/blog/introducing-the-decorative-image-widget-drupal-module/</link><pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/introducing-the-decorative-image-widget-drupal-module/</guid><description>Drupal&amp;rsquo;s Problem With Decorative Images Decorative images are those that should not be described to assistive technology like screen readers. A simple example is a fancy image of a decorative border that you insert at the end of a news article.
Supporting decorative images in Drupal is quite straight forward. Images fields can be set to collect alternative text but not require it. When left blank, Drupal will output an empty alt attribute for the image element, indicating to screen readers the image should be ignored.</description></item><item><title>How Drupal's Dynamic Page Cache Delivers Extremely Fast 404 Pages</title><link>http://bkosborne.com/blog/how-drupals-dynamic-page-cache-delivers-extremely-fast-404-pages/</link><pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/how-drupals-dynamic-page-cache-delivers-extremely-fast-404-pages/</guid><description>Lately I&amp;rsquo;ve been working to improve the response time of 404 pages on some Drupal 8 sites I help maintain. Depending on the complexity of the site and the status of Drupal&amp;rsquo;s various cache layers, Drupal can be quite slow to generate a full page response, even for a 404 page. These sites I maintain are occasionally subjected to aggressive security penetration scans which generate a ton of 404 responses for completely unique URLs.</description></item><item><title>Introducing the Media Entity File Replace module</title><link>http://bkosborne.com/blog/introducing-the-media-entity-file-replace-module/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/introducing-the-media-entity-file-replace-module/</guid><description>The Problem Replacing files uploaded to your Drupal site can be very frustrating. In most cases, when an editor wants to replace a document, they want to keep the exact same filename and filepath and just overwrite the contents of the file. This is important in cases where the file is linked to elsewhere throughout the website or on other websites outside of the editors control. If you use the media module to manage documents on your site, you&amp;rsquo;ll quickly discover that it&amp;rsquo;s not possible to upload a replacement file for a document and keep the same filename.</description></item><item><title>The challenge of using responsive image styles with Drupal's layout builder</title><link>http://bkosborne.com/blog/the-challenge-of-using-responsive-image-styles-with-drupals-layout-builder/</link><pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/the-challenge-of-using-responsive-image-styles-with-drupals-layout-builder/</guid><description>Responsive images overview As screen resolutions and pixel densities continue to climb year after year, it&amp;rsquo;s becoming more important to deliver the best possible image quality to your visitors. The easy way out is to deliver a single high resolution image, but this can have a real impact on page load time &amp;amp; bandwidth usage, especially for visitors on mobile devices &amp;amp; networks. The better solution is to deliver the appropriately sized image based on the screen width/resolution of the browser.</description></item><item><title>Adding MySQL UTF8MB4 support to hundreds of Drupal 7 multi-sites</title><link>http://bkosborne.com/blog/adding-mysql-utf8mb4-support-to-hundreds-of-drupal-7-multi-sites/</link><pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/adding-mysql-utf8mb4-support-to-hundreds-of-drupal-7-multi-sites/</guid><description>Unicode characters encoded using UTF8 can technically use 1 to 4 bytes to represent a single character. However, older versions of MySQL only provided support for storing UTF8 encoded characters that used 1 to 3 bytes. This was enough to cover the most commonly used characters, but is not suitable for applications that accept user input where any character can be submitted (like emojis, which use 4 bytes). Newer versions of MySQL provide a character encoding called utf8mb4 to fix this issue.</description></item><item><title>Overriding module configuration in a Drupal 8 installation profile (with some "gotchas")</title><link>http://bkosborne.com/blog/overriding-module-configuration-in-a-drupal-8-installation-profile-with-some-gotchas/</link><pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/overriding-module-configuration-in-a-drupal-8-installation-profile-with-some-gotchas/</guid><description>I&amp;rsquo;m working in creating a Drupal 8 installation profile and learning how they can override default configuration that its modules provide at install time.
All Drupal 8 modules can provide a set of configuration that should be installed to the site when the module is installed. This configuration is placed in the module&amp;rsquo;s config/install or config/optional directory. The only difference is that the configuration objects placed in the config/optional directory will only be installed if all of their dependencies are met.</description></item><item><title>Importing Images Within an RSS Feed Using the Drupal 7 Feeds Module</title><link>http://bkosborne.com/blog/importing-images-within-an-rss-feed-using-the-drupal-7-feeds-module/</link><pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/importing-images-within-an-rss-feed-using-the-drupal-7-feeds-module/</guid><description>Yes, a blog post about Drupal 7!
I recently worked on an enhancement for a large multi-site Drupal 7 platform to allow its users to import news articles from RSS feeds. Pretty simple request, and given the maturity of the Drupal 7 contrib module ecosystem, it wasn&amp;rsquo;t too difficult to implement.
One somewhat interesting requirement was that images from the RSS feed be imported to an image field on the news article content type.</description></item><item><title>Keeping a view of upcoming events fresh in Drupal 8</title><link>http://bkosborne.com/blog/keeping-a-view-of-upcoming-events-fresh-in-drupal-8/</link><pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate><guid>http://bkosborne.com/blog/keeping-a-view-of-upcoming-events-fresh-in-drupal-8/</guid><description>Imagine you have a view that lists upcoming events on your Drupal 8 site. There&amp;rsquo;s a date filter that filters out any event who&amp;rsquo;s start date is less than the current date. This works great until you realize that the output of the view will be cached in one or many places (dynamic page cache, internal page cache, varnish, etc). Once it&amp;rsquo;s cached, views doesn&amp;rsquo;t execute the query and can&amp;rsquo;t compare the date to the current time, so you may get older events sticking around.</description></item></channel></rss>